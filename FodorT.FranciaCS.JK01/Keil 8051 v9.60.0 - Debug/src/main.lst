C51 COMPILER V9.60.0.0   MAIN                                                              09/26/2024 14:32:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\src\main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Teodor\
                    -Desktop\FodorT.FranciaCS.JK01\src\main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE
                    -(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Teodor\Desktop\FodorT.FranciaCS.JK01\inc;C:/Silic
                    -onLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/devel
                    -oper/sdks/8051/v4.2.5//Device/EFM8BB1/inc) PRINT(.\src\main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\main.OB
                    -J)

line level    source

   1          //=========================================================
   2          // src/beta_kilometerora_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          
  15          #include <stdio.h>
  16          #include <stdint.h>
  17          #include <stdlib.h>
  18          #include <stdbool.h>
  19          
  20          #include "Display.h"
  21          
  22          
  23          // $[Generated Includes]
  24          // [Generated Includes]$
  25          
  26          //-----------------------------------------------------------------------------
  27          // SiLabs_Startup() Routine
  28          // ----------------------------------------------------------------------------
  29          // This function is called immediately after reset, before the initialization
  30          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  31          // useful place to disable the watchdog timer, which is enable by default
  32          // and may trigger before main() in some instances.
  33          //-----------------------------------------------------------------------------
  34          void SiLabs_Startup (void)
  35          {
  36   1        // $[SiLabs Startup]
  37   1        // [SiLabs Startup]$
  38   1      
  39   1      }
  40          
  41          //-----------------------------------------------------------------------------
  42          // main() Routine
  43          // ----------------------------------------------------------------------------
  44          
  45          #define TIMER2_FREQ_HZ   ((uint16_t ) 63802)
  46          
  47          #define TIMER2_PERIOD_S  ((float)     (1.0 / TIMER2_FREQ_HZ))
  48          
  49          #define M_PI ((float) 3.14159265358979323846)
  50          
  51          #define WHEEL_RADIUS_M ((float) 0.035)
C51 COMPILER V9.60.0.0   MAIN                                                              09/26/2024 14:32:12 PAGE 2   

  52          
  53          #define WHEEL_CIRCUMFERENCE_M (2 * WHEEL_RADIUS_M * M_PI)
  54          
  55          volatile uint8_t digit_array[4];
  56          volatile bool g_digits_ready = false;
  57          
  58          volatile bool g_time_measurement_ready = false;
  59          volatile uint16_t g_tick_counter = 0;
  60          volatile bool g_moving = false;
  61          
  62          volatile bool g_button_pressed = false;
  63          
  64          int main (void)
  65          {
  66   1        static float period = 0.0;
  67   1        static float temp_period = 0.0;
  68   1        static float speed = 0.0;
  69   1      
  70   1        // Call hardware initialization routine
  71   1        enter_DefaultMode_from_RESET();
  72   1      
  73   1        IE_EA = 0;
  74   1        decoder_init();
  75   1        shift_register_init();
  76   1        IE_EA = 1;
  77   1      
  78   1        while (1) 
  79   1        {
  80   2            if(g_button_pressed == true)
  81   2            {
  82   3                P1_B4 = !P1_B4;
  83   3                g_button_pressed = false;
  84   3            }
  85   2      
  86   2            if(g_time_measurement_ready == true)
  87   2            {
  88   3                period = g_tick_counter * TIMER2_PERIOD_S;
  89   3                g_time_measurement_ready = false;
  90   3            }
  91   2      
  92   2            if(g_digits_ready == false)
  93   2            {
  94   3                temp_period = period;
  95   3      
  96   3                if(g_moving)
  97   3                {
  98   4                        //Convert period (s) to km/h
  99   4                        speed = ((WHEEL_CIRCUMFERENCE_M / temp_period) * 3.6);
 100   4                }
 101   3                else
 102   3                {
 103   4                        speed = 0.0;
 104   4                }
 105   3      
 106   3                get_digits_of_number(speed, digit_array);
 107   3                g_digits_ready = true;
 108   3            }
 109   2        }                             
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    144    ----
C51 COMPILER V9.60.0.0   MAIN                                                              09/26/2024 14:32:12 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
