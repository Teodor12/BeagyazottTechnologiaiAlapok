C51 COMPILER V9.60.0.0   BETA_KILOMETERORA_MAIN                                            09/18/2024 17:35:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BETA_KILOMETERORA_MAIN
OBJECT MODULE PLACED IN .\src\beta_kilometerora_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Teodor\
                    -SimplicityStudio\v5_workspace\FodorT.FranciaCS.JK01\src\beta_kilometerora_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE
                    -) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Teodor\Si
                    -mplicityStudio\v5_workspace\FodorT.FranciaCS.JK01\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Dev
                    -ice/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB1/inc) PRINT(.\src\bet
                    -a_kilometerora_main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\beta_kilometerora_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/beta_kilometerora_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          #include <stdio.h>
  15          #include <stdint.h>
  16          #include <stdlib.h>
  17          #include <stdbool.h>
  18          
  19          volatile bool g_time_measurement_ready = false;
  20          volatile uint16_t g_time_measurement_value = 0;
  21          
  22          // $[Generated Includes]
  23          // [Generated Includes]$
  24          
  25          //-----------------------------------------------------------------------------
  26          // SiLabs_Startup() Routine
  27          // ----------------------------------------------------------------------------
  28          // This function is called immediately after reset, before the initialization
  29          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  30          // useful place to disable the watchdog timer, which is enable by default
  31          // and may trigger before main() in some instances.
  32          //-----------------------------------------------------------------------------
  33          void SiLabs_Startup (void)
  34          {
  35   1        // $[SiLabs Startup]
  36   1        // [SiLabs Startup]$
  37   1      }
  38          
  39          //-----------------------------------------------------------------------------
  40          // main() Routine
  41          // ----------------------------------------------------------------------------
  42          
  43          #define TIMER2_FREQ_HZ (uint16_t)63802
  44          #define TIMER2_PERIOD_MS (1000.0f / TIMER2_FREQ_HZ)
  45          
  46          static float period = 0.0;
  47          
  48          int main (void)
  49          {
  50   1        // Call hardware initialization routine
  51   1        enter_DefaultMode_from_RESET();
C51 COMPILER V9.60.0.0   BETA_KILOMETERORA_MAIN                                            09/18/2024 17:35:41 PAGE 2   

  52   1        
  53   1        while (1) 
  54   1        {
  55   2            if(g_time_measurement_ready == true)
  56   2            {
  57   3                g_time_measurement_value;
  58   3                g_time_measurement_ready = false;
  59   3            }
  60   2        }                             
  61   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     15    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
