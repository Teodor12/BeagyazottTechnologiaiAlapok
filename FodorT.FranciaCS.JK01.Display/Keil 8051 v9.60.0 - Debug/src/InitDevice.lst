C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/23/2024 14:20:13 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\hallgat
                    -o\Desktop\FodorT.FranciaCS.JK01.Display\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATF
                    -UZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\hallgato\Desktop\FodorT.FranciaCS
                    -.JK01.Display\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs
                    -/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB1/inc) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAG
                    -ELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        WDT_0_enter_DefaultMode_from_RESET ();
  27   1        PORTS_1_enter_DefaultMode_from_RESET ();
  28   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  29   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  30   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  31   1        SPI_0_enter_DefaultMode_from_RESET ();
  32   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  33   1        // [Config Calls]$
  34   1      
  35   1      }
  36          
  37          extern void
  38          WDT_0_enter_DefaultMode_from_RESET (void)
  39          {
  40   1        // $[Watchdog Timer Init Variable Declarations]
  41   1        uint32_t i;
  42   1        bool ea;
  43   1        // [Watchdog Timer Init Variable Declarations]$
  44   1      
  45   1        // $[WDTCN - Watchdog Timer Control]
  46   1        // Deprecated
  47   1        // [WDTCN - Watchdog Timer Control]$
  48   1      
  49   1        // $[WDTCN_2 - Watchdog Timer Control]
  50   1      
  51   1        // Feed WDT timer before disabling (Erratum WDT_E102)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/23/2024 14:20:13 PAGE 2   

  52   1        WDTCN = 0xA5;
  53   1      
  54   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  55   1        for (i = 0; i < (2 * 3062500UL) / (10000 * 3); i++)
  56   1          {
  57   2            NOP ();
  58   2          }
  59   1      
  60   1        // Disable WDT
  61   1        ea = IE_EA;
  62   1        IE_EA = 0;
  63   1        WDTCN = 0xDE;
  64   1        WDTCN = 0xAD;
  65   1        IE_EA = ea;
  66   1      
  67   1        // [WDTCN_2 - Watchdog Timer Control]$
  68   1      
  69   1      }
  70          
  71          extern void
  72          PBCFG_0_enter_DefaultMode_from_RESET (void)
  73          {
  74   1        // $[XBR2 - Port I/O Crossbar 2]
  75   1        /***********************************************************************
  76   1         - Weak Pullups enabled 
  77   1         - Crossbar enabled
  78   1         ***********************************************************************/
  79   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
  80   1        // [XBR2 - Port I/O Crossbar 2]$
  81   1      
  82   1        // $[PRTDRV - Port Drive Strength]
  83   1        // [PRTDRV - Port Drive Strength]$
  84   1      
  85   1        // $[XBR0 - Port I/O Crossbar 0]
  86   1        // [XBR0 - Port I/O Crossbar 0]$
  87   1      
  88   1        // $[XBR1 - Port I/O Crossbar 1]
  89   1        // [XBR1 - Port I/O Crossbar 1]$
  90   1      
  91   1      }
  92          
  93          extern void
  94          SPI_0_enter_DefaultMode_from_RESET (void)
  95          {
  96   1        // $[SPI0CKR - SPI0 Clock Rate]
  97   1        // [SPI0CKR - SPI0 Clock Rate]$
  98   1      
  99   1        // $[SPI0CFG - SPI0 Configuration]
 100   1        // [SPI0CFG - SPI0 Configuration]$
 101   1      
 102   1        // $[SPI0CN0 - SPI0 Control]
 103   1        /***********************************************************************
 104   1         - 3-Wire Slave or 3-Wire Master Mode
 105   1         ***********************************************************************/
 106   1        SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 107   1        // [SPI0CN0 - SPI0 Control]$
 108   1      
 109   1      }
 110          
 111          extern void
 112          TIMER01_0_enter_DefaultMode_from_RESET (void)
 113          {
 114   1        // $[Timer Initialization]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/23/2024 14:20:13 PAGE 3   

 115   1        //Save Timer Configuration
 116   1        uint8_t TCON_save;
 117   1        TCON_save = TCON;
 118   1        //Stop Timers
 119   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 120   1      
 121   1        // [Timer Initialization]$
 122   1      
 123   1        // $[TH0 - Timer 0 High Byte]
 124   1        /***********************************************************************
 125   1         - Timer 0 High Byte = 0x01
 126   1         ***********************************************************************/
 127   1        TH0 = (0x01 << TH0_TH0__SHIFT);
 128   1        // [TH0 - Timer 0 High Byte]$
 129   1      
 130   1        // $[TL0 - Timer 0 Low Byte]
 131   1        // [TL0 - Timer 0 Low Byte]$
 132   1      
 133   1        // $[TH1 - Timer 1 High Byte]
 134   1        // [TH1 - Timer 1 High Byte]$
 135   1      
 136   1        // $[TL1 - Timer 1 Low Byte]
 137   1        // [TL1 - Timer 1 Low Byte]$
 138   1      
 139   1        // $[Timer Restoration]
 140   1        //Restore Timer Configuration
 141   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 142   1      
 143   1        // [Timer Restoration]$
 144   1      
 145   1      }
 146          
 147          extern void
 148          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 149          {
 150   1        // $[CKCON0 - Clock Control 0]
 151   1        // [CKCON0 - Clock Control 0]$
 152   1      
 153   1        // $[TMOD - Timer 0/1 Mode]
 154   1        /***********************************************************************
 155   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 156   1         - Mode 0, 13-bit Counter/Timer
 157   1         - Timer Mode
 158   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 159   1         - Timer Mode
 160   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 161   1         ***********************************************************************/
 162   1        TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 163   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 164   1        // [TMOD - Timer 0/1 Mode]$
 165   1      
 166   1        // $[TCON - Timer 0/1 Control]
 167   1        /***********************************************************************
 168   1         - Start Timer 0 running
 169   1         ***********************************************************************/
 170   1        TCON |= TCON_TR0__RUN;
 171   1        // [TCON - Timer 0/1 Control]$
 172   1      
 173   1      }
 174          
 175          extern void
 176          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 177          {
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/23/2024 14:20:13 PAGE 4   

 178   1        // $[EIE1 - Extended Interrupt Enable 1]
 179   1        // [EIE1 - Extended Interrupt Enable 1]$
 180   1      
 181   1        // $[EIP1 - Extended Interrupt Priority 1]
 182   1        // [EIP1 - Extended Interrupt Priority 1]$
 183   1      
 184   1        // $[IE - Interrupt Enable]
 185   1        /***********************************************************************
 186   1         - Enable each interrupt according to its individual mask setting
 187   1         - Disable external interrupt 0
 188   1         - Disable external interrupt 1
 189   1         - Disable all SPI0 interrupts
 190   1         - Enable interrupt requests generated by the TF0 flag
 191   1         - Disable all Timer 1 interrupt
 192   1         - Disable Timer 2 interrupt
 193   1         - Disable UART0 interrupt
 194   1         ***********************************************************************/
 195   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 196   1            | IE_ET0__ENABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 197   1            | IE_ES0__DISABLED;
 198   1        // [IE - Interrupt Enable]$
 199   1      
 200   1        // $[IP - Interrupt Priority]
 201   1        // [IP - Interrupt Priority]$
 202   1      
 203   1      }
 204          
 205          extern void
 206          PORTS_1_enter_DefaultMode_from_RESET (void)
 207          {
 208   1        // $[P1 - Port 1 Pin Latch]
 209   1        // [P1 - Port 1 Pin Latch]$
 210   1      
 211   1        // $[P1MDOUT - Port 1 Output Mode]
 212   1        /***********************************************************************
 213   1         - P1.0 output is open-drain
 214   1         - P1.1 output is open-drain
 215   1         - P1.2 output is open-drain
 216   1         - P1.3 output is open-drain
 217   1         - P1.4 output is push-pull
 218   1         - P1.5 output is open-drain
 219   1         - P1.6 output is open-drain
 220   1         - P1.7 output is open-drain
 221   1         ***********************************************************************/
 222   1        P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__OPEN_DRAIN
 223   1            | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__PUSH_PULL
 224   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 225   1            | P1MDOUT_B7__OPEN_DRAIN;
 226   1        // [P1MDOUT - Port 1 Output Mode]$
 227   1      
 228   1        // $[P1MDIN - Port 1 Input Mode]
 229   1        // [P1MDIN - Port 1 Input Mode]$
 230   1      
 231   1        // $[P1SKIP - Port 1 Skip]
 232   1        // [P1SKIP - Port 1 Skip]$
 233   1      
 234   1        // $[P1MASK - Port 1 Mask]
 235   1        // [P1MASK - Port 1 Mask]$
 236   1      
 237   1        // $[P1MAT - Port 1 Match]
 238   1        // [P1MAT - Port 1 Match]$
 239   1      
 240   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/23/2024 14:20:13 PAGE 5   

 241          
 242          extern void
 243          PORTS_0_enter_DefaultMode_from_RESET (void)
 244          {
 245   1      
 246   1      }
 247          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    137    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
